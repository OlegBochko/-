uint8_t trig = 10;
uint8_t echo = 11;
uint8_t en1 = 9;
uint8_t en2 = 3;
uint8_t in1 = 7;
uint8_t in2 = 6;
uint8_t in3 = 5;
uint8_t in4 = 4;
double r;

boolean isMovingForward = false;
boolean isMovingRight = false;

void setup() 
{
	pinMode (3,OUTPUT);
	pinMode (4,OUTPUT);
	pinMode (5,OUTPUT);
	pinMode (6,OUTPUT);
	pinMode (7,OUTPUT);
	pinMode (9,OUTPUT);
	pinMode (10,OUTPUT);
	pinMode (11,INPUT);
}

void loop() 
{
	r = range (trig, echo); // r>40 +

	if ( !isMovingForward && !isMovingRight && r > 40 )
	{
		speedUpToMax(en1, en2, in1, in2, in3, in4);
		isMovingForward = true;
		isMovingRight = false;
	}
	else if ( r <= 40 && (isMovingForward && !isMovingRight || !isMovingForward && !isMovingRight) )
	{
		fullStop(en1, en2);
		turnRight(en2, in3, in4); //если правый движок - en1, то turnRight(en1, in1, in2);
		isMovingForward = false;
		isMovingRight = true;
	}
	else if ( !isMovingForward && isMovingRight && r > 40 )
	{
		fullStop(en1, en2);
		speedUpToMax(en1, en2, in1, in2, in3, in4);
		isMovingForward = true;
		isMovingRight = false;
	}
}

double range (uint8_t trigPin, uint8_t echoPin) 
{
	double z;
	digitalWrite(trigPin, LOW);
	delayMicroseconds(10);
	digitalWrite(trigPin, HIGH);
	delayMicroseconds(10);
	digitalWrite(trigPin, LOW);
	z = pulseIn(echoPin, HIGH);
	z = (z/2)/29.1;
	return z;
}

void speedUpToMax(	uint8_t enPin1, uint8_t enPin2,
					uint8_t posPin1, uint8_t negPin1,
					uint8_t posPin2, uint8_t negPin2  )
{
	r = range(trig, echo);
	uint8_t i = 0;
	while (i <= 255)
	{
		r = range(trig,echo);
		if (r <= 40)
		{
			fullStop(enPin);
			isMovingRight = true;
			isMovingForward = false;
			break;
		}
		move(i, enPin1, posPin1, negPin1);
		move(i, enPin2, posPin2, negPin2);
		i++;
		delay(5);
	}
	isMovingRight = false;
	isMovingForward = true;
}

void turnRight(uint8_t rightEnPin, uint8_t posPin, uint8_t negPin)
{
	r = range(trig, echo);
	uint8_t i = 0;
	isMovingRight = true;
	isMovingForward = false;

	while (i <= 255)
	{
		r = range(trig,echo);
		if (r > 40)
		{
			fullStop(en1, en2);
			break;
		}
		move(i, rightEnPin, negPin, posPin);
		i++;
		delay(5);
	}
}

void move(uint8_t power, uint8_t enPin, uint8_t posPin, uint8_t negPin)
{
	digitalWrite (posPin, HIGH);
	digitalWrite (negPin, LOW);
	analogWrite (enPin, power);
}

void fullStop(uint8_t enPin1, uint8_t enPin2)
{
	analogWrite(enPin1, 0);
	analogWrite(enPin2, 0);
}
